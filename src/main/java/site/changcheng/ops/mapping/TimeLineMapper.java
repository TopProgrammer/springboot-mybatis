package site.changcheng.ops.mapping;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import site.changcheng.ops.entity.TimeLine;
import site.changcheng.ops.entity.TimeLineExample;

public interface TimeLineMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @SelectProvider(type=TimeLineSqlProvider.class, method="countByExample")
    int countByExample(TimeLineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @DeleteProvider(type=TimeLineSqlProvider.class, method="deleteByExample")
    int deleteByExample(TimeLineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @Delete({
        "delete from timeline",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @Insert({
        "insert into timeline (id, content, ",
        "title, year, createtime, ",
        "time, important)",
        "values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, ",
        "#{title,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, ",
        "#{time,jdbcType=VARCHAR}, #{important,jdbcType=INTEGER})"
    })
    int insert(TimeLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @InsertProvider(type=TimeLineSqlProvider.class, method="insertSelective")
    int insertSelective(TimeLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @SelectProvider(type=TimeLineSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="year", property="year", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="time", property="time", jdbcType=JdbcType.VARCHAR),
        @Result(column="important", property="important", jdbcType=JdbcType.INTEGER)
    })
    List<TimeLine> selectByExample(TimeLineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @Select({
        "select",
        "id, content, title, year, createtime, time, important",
        "from timeline",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="year", property="year", jdbcType=JdbcType.VARCHAR),
        @Result(column="createtime", property="createtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="time", property="time", jdbcType=JdbcType.VARCHAR),
        @Result(column="important", property="important", jdbcType=JdbcType.INTEGER)
    })
    TimeLine selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @UpdateProvider(type=TimeLineSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TimeLine record, @Param("example") TimeLineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @UpdateProvider(type=TimeLineSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TimeLine record, @Param("example") TimeLineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @UpdateProvider(type=TimeLineSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TimeLine record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table timeline
     *
     * @mbggenerated Thu Jul 06 21:47:40 CST 2017
     */
    @Update({
        "update timeline",
        "set content = #{content,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "year = #{year,jdbcType=VARCHAR},",
          "createtime = #{createtime,jdbcType=TIMESTAMP},",
          "time = #{time,jdbcType=VARCHAR},",
          "important = #{important,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TimeLine record);
}